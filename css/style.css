/* placeholder */
@font-face {
  font-family: "SF Compact Display";
  src: url("../ fonts/SFCompactDisplay-Thin.eot");
  src: url("../fonts/SFCompactDisplay-Thin.eot?#iefix") format("embedded-opentype"), url("../fonts/SFCompactDisplay-Thin.woff2") format("woff2"), url("../fonts/SFCompactDisplay-Thin.woff") format("woff"), url("../fonts/SFCompactDisplay-Thin.ttf") format("truetype"), url("../fonts/SFCompactDisplay-Thin.svg#SFCompactDisplay-Thin") format("svg");
  font-weight: 100;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "SF-Compact-Display";
  src: url("../fonts/SFCompactDisplay-Medium.eot");
  src: url("../fonts/SFCompactDisplay-Medium.eot?#iefix") format("embedded-opentype"), url("../fonts/SFCompactDisplay-Medium.woff2") format("woff2"), url("../fonts/SFCompactDisplay-Medium.woff") format("woff"), url("../fonts/SFCompactDisplay-Thin.ttf") format("truetype"), url("../fonts/SFCompactDisplay-Medium.svg#SFCompactDisplay-Medium") format("svg");
  font-weight: 500;
  font-style: normal;
  font-display: swap;
}
.active {
  background-color: #ffffff;
  box-shadow: 0px 3px 5px rgba(0, 0, 0, 0.3);
  z-index: 999;
}

header {
  position: absolute;
  position: fixed;
  width: 100%;
  top: 0%;
  z-index: 1;
}
@media (max-width: 991px) {
  header {
    padding: 0.5rem 0;
  }
}
header nav {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding-top: 1rem;
}
header nav .mainlogo {
  width: 30%;
}
@media (max-width: 1040px) {
  header nav .mainlogo {
    width: 25%;
  }
}
header nav .mainlogo h1 {
  font-family: "Roboto", sans-serif;
}
@media (max-width: 991px) {
  header nav .mainlogo h1 {
    width: 290px;
  }
}
header nav .mainlogo h1 img {
  width: 42px;
}
header nav .mainlogo h1 a {
  display: flex;
  align-items: center;
  text-transform: uppercase;
  font-size: 1.4rem;
  color: #505050;
}
header nav .mainlogo h1 a .headding {
  margin-left: 0.5rem;
}
@media (max-width: 991px) {
  header nav .mainlogo h1 a {
    font-size: 1rem;
  }
}
header nav .navigation {
  width: 70%;
}
@media (max-width: 1040px) {
  header nav .navigation {
    width: 75%;
  }
}
@media (max-width: 991px) {
  header nav .navigation {
    width: 100%;
    position: fixed;
    top: 0;
    right: -100%;
    background: #fff;
    height: 100%;
    z-index: 99;
    transition: all 0.5s ease;
    overflow-y: scroll;
    overflow-x: hidden;
    padding: 5rem 0;
  }
  header nav .navigation li a :hover {
    color: #F2E162 !important;
  }
}
@media (max-width: 991px) {
  header nav .navigation.menu-open {
    right: 0;
  }
}
header .top-header {
  display: flex;
  align-items: center;
  justify-content: flex-end;
}
@media (max-width: 991px) {
  header .top-header {
    padding: 0 1.5rem;
    justify-content: flex-start;
    flex-direction: column;
    flex-wrap: wrap;
    align-items: flex-start !important;
  }
}
header .top-header ul {
  display: flex;
}
header .menu-list li {
  margin: 0 2rem;
}
header .menu-list li a {
  font-size: 1.3rem;
  line-height: 2rem;
  color: #505050;
  font-family: "Poppins", sans-serif;
}
@media (max-width: 991px) {
  header .menu-list {
    margin-bottom: 0.625rem;
  }
  header .menu-list ul {
    flex-direction: column;
  }
  header .menu-list ul li {
    margin: 0.7rem 0.3125rem;
  }
}
header .select-font {
  position: relative;
  padding-right: 1.4rem;
}
header .select-font li {
  margin: 0 1rem;
}
header .select-font a {
  line-height: 1.25rem;
  color: #505050;
  font-weight: bold;
}
header .select-font li:first-child a {
  font-size: 1.1rem;
}
header .select-font li:nth-child(2) a {
  font-size: 1.4rem;
}
header .select-font li:last-child a {
  font-size: 1.6rem;
}
header .select-font::after {
  content: "";
  position: absolute;
  display: block;
  background: #505050;
  width: 0.1rem;
  height: 1.5rem;
  right: 0;
  top: 0.1875rem;
}
@media (max-width: 991px) {
  header .select-font::after {
    display: none;
  }
}
@media (max-width: 991px) {
  header .select-font {
    padding-left: unset;
  }
}
header .select-language {
  padding: 0 1.2rem;
  position: relative;
}
header .select-language select {
  border: none;
  font-size: 1.5rem;
  line-height: 1.25rem;
  color: #505050;
  font-family: "Fira Sans", sans-serif;
  background: transparent;
}
header .select-language::after {
  content: "";
  position: absolute;
  display: block;
  background: #505050;
  width: 0.1rem;
  height: 1.5rem;
  right: 0;
  top: 0.4rem;
}
@media (max-width: 991px) {
  header .select-language::after {
    display: none;
  }
}
@media (max-width: 991px) {
  header .select-language {
    padding-left: 1.8rem;
    padding: 1rem 0rem !important;
  }
}
header .select-color {
  padding: 0 1.2rem;
  position: relative;
}
header .select-color li a {
  width: 1.5rem;
  height: 1.5rem;
  display: inline-block;
  border-radius: 100%;
  margin: 0 0.3125rem -0.125rem;
  -webkit-border-radius: 100%;
  -moz-border-radius: 100%;
  -ms-border-radius: 100%;
  -o-border-radius: 100%;
}
header .select-color li:first-child a {
  background: #265781;
}
header .select-color li:nth-child(2) a {
  background: #52B27B;
}
header .select-color li:last-child a {
  background: #F2E162;
}
header .select-color::after {
  content: "";
  position: absolute;
  display: block;
  background: #505050;
  width: 0.0625rem;
  height: 1.4rem;
  right: -0.625rem;
  top: 0.25rem;
}
@media (max-width: 991px) {
  header .select-color::after {
    display: none;
  }
}
@media (max-width: 991px) {
  header .select-color {
    padding: 1rem 0rem;
  }
}
header .search-btn {
  padding-left: 1.4rem;
  padding-top: 1rem;
}
header .main-menu {
  display: flex;
  justify-content: flex-end;
}
header .main-menu ul {
  display: flex;
}
header .main-menu li {
  margin: 0 1rem;
  position: relative;
}
header .main-menu li::after {
  content: "";
  position: absolute;
  display: block;
  background: #505050;
  width: 0.0625rem;
  height: 1.4rem;
  right: -0.625rem;
  top: 0.25rem;
}
@media (max-width: 991px) {
  header .main-menu li::after {
    display: none;
  }
}
header .main-menu li:last-child {
  margin-right: 0;
}
header .main-menu li:last-child::after {
  display: none;
}
header .main-menu a {
  font-size: 1.3rem;
  font-family: "Poppins", sans-serif;
  color: #505050;
}
@media (max-width: 991px) {
  header .main-menu {
    padding: 1.25rem 0.9375rem;
    justify-content: unset;
  }
  header .main-menu ul {
    float: none;
    flex-direction: column;
  }
  header .main-menu ul li {
    margin: 0.625rem !important;
    float: none;
  }
  header .main-menu ul li ::after {
    display: none;
  }
}

@media (max-width: 991px) {
  .hamburger {
    width: 3rem;
    height: 3rem;
    z-index: 999;
    position: absolute;
    right: 1.5rem;
    top: 2.5rem;
  }
  .hamburger span {
    background: #0f5c30;
    width: 100%;
    height: 0.4rem;
    margin: 0.4rem 0;
    display: block;
    border-radius: 0.625rem;
  }
}

@media (max-width: 991px) {
  .menu-close span:first-child {
    color: #F2E162;
    transform: rotate(-45deg) translate(-0.6rem, 0.6rem);
    -webkit-transform: rotate(-45deg) translate(-0.6rem, 0.6rem);
    -moz-transform: rotate(-45deg) translate(-0.6rem, 0.6rem);
    -ms-transform: rotate(-45deg) translate(-0.6rem, 0.6rem);
    -o-transform: rotate(-45deg) translate(-0.6rem, 0.6rem);
  }
  .menu-close span:nth-child(2) {
    background: transparent;
  }
  .menu-close span:last-child {
    color: #F2E162;
    transform: rotate(45deg) translate(-0.5rem, -0.5rem);
    -webkit-transform: rotate(45deg) translate(-0.5rem, -0.5rem);
    -moz-transform: rotate(45deg) translate(-0.5rem, -0.5rem);
    -ms-transform: rotate(45deg) translate(-0.5rem, -0.5rem);
    -o-transform: rotate(45deg) translate(-0.5rem, -0.5rem);
  }
}

.menu-page {
  overflow: hidden;
}

.footer {
  margin-top: 1.4rem;
  background-color: #F2E162;
  padding: 2.7rem 0 3.5rem;
  position: relative;
}
.footer .footer-content {
  display: flex;
  align-items: flex-end;
}
@media (max-width: 991px) {
  .footer .footer-content {
    flex-direction: column-reverse;
  }
}
.footer .footer-content .footer-left {
  width: 62%;
  position: relative;
  margin-right: 3%;
}
@media (max-width: 991px) {
  .footer .footer-content .footer-left {
    width: 100%;
    margin-right: 0;
  }
}
.footer .footer-content .footer-left .footer-left-inner h4 {
  margin-bottom: 1.6rem;
  font-size: 2.2rem;
  font-weight: bold;
  font-family: "Lato", sans-serif;
}
.footer .footer-content .footer-left .footer-left-inner .newsletter-form {
  padding: 0.375rem 0 0.375rem 1.25rem;
  width: 90%;
  position: relative;
  background: rgba(0, 0, 0, 0.1);
  border: none;
  display: flex;
  align-items: center;
  border-radius: 80px;
}
@media (max-width: 767px) {
  .footer .footer-content .footer-left .footer-left-inner .newsletter-form {
    justify-content: space-around;
  }
}
@media (max-width: 575px) {
  .footer .footer-content .footer-left .footer-left-inner .newsletter-form {
    width: 100%;
  }
}
.footer .footer-content .footer-left .footer-left-inner .newsletter-form input {
  width: 68%;
  display: block;
  border-radius: 5rem;
  height: 4.6rem;
  font-size: 0.875rem;
  border: none;
  background: transparent;
  padding: 1.5rem 2rem;
  font-size: 1.4rem;
  font-family: "Lato", sans-serif;
}
.footer .footer-content .footer-left .footer-left-inner .newsletter-form input:focus {
  border: none;
  outline: none;
}
@media (max-width: 575px) {
  .footer .footer-content .footer-left .footer-left-inner .newsletter-form input {
    height: 3.6rem;
  }
}
.footer .footer-content .footer-left .footer-left-inner .newsletter-form .btn {
  background: #FFFFFF;
  padding: 1rem 3rem;
  font-size: 1.6rem;
  line-height: 1rem;
  color: #393939;
  font-family: "SF-Compact-Display";
  font-weight: bold;
  text-transform: uppercase;
  cursor: pointer;
  -webkit-text-fill-color: #393939;
  height: 3.6rem;
  font-family: "Lato", sans-serif;
  font-size: 1.6rem;
  height: 3.6rem;
  border-radius: 80px;
  -webkit-border-radius: 80px;
  -moz-border-radius: 80px;
  -ms-border-radius: 80px;
  -o-border-radius: 80px;
}
@media (max-width: 767px) {
  .footer .footer-content .footer-left .footer-left-inner .newsletter-form .btn {
    font-size: 1rem;
    font-size: 0.8rem;
  }
}
@media (max-width: 575px) {
  .footer .footer-content .footer-left .footer-left-inner .newsletter-form .btn {
    padding: 1rem 1rem;
  }
}
.footer .footer-content .footer-left .footer-menu {
  padding: 2rem 0 4.25rem;
  display: inline-block;
  width: 100%;
}
.footer .footer-content .footer-left .footer-menu h5 {
  font-size: 1.8rem;
  font-family: "SF-Compact-Display";
  margin-bottom: 1.4rem;
}
.footer .footer-content .footer-left .footer-menu .menu-1 {
  width: 25%;
  float: left;
}
@media (max-width: 575px) {
  .footer .footer-content .footer-left .footer-menu .menu-1 {
    float: none;
  }
}
.footer .footer-content .footer-left .footer-menu li {
  float: none;
}
.footer .footer-content .footer-left .footer-menu li a {
  font-size: 1.4rem;
  line-height: 2.5rem;
  color: #505050;
  font-family: "SF-Compact-Display";
}
.footer .footer-content .footer-left .footer-menu li a :hover {
  opacity: 0.7;
}
.footer .footer-content .menu-1 {
  width: 25%;
  float: left;
}
.footer .footer-content .menu-2 {
  width: 60%;
  float: left;
}
@media (max-width: 575px) {
  .footer .footer-content .menu-2 {
    margin-top: 1rem;
  }
}
.footer .footer-content .menu-2 ul {
  width: 50%;
  float: left;
}
.footer .footer-content .menu-2 ul:last-child {
  margin-left: 15%;
  width: 35%;
}
@media (max-width: 575px) {
  .footer .footer-content .menu-2 ul:last-child {
    margin-top: 1rem;
    margin-left: unset;
  }
}
@media (max-width: 575px) {
  .footer .footer-content .menu-2 ul {
    float: none;
  }
}

.copyright-sec {
  display: flex;
  width: 100%;
  justify-content: space-between;
}
@media (max-width: 575px) {
  .copyright-sec {
    flex-direction: column;
    justify-content: center;
    text-align: center;
  }
}
.copyright-sec p {
  font-size: 1.2rem;
  line-height: 2rem;
  margin: 0;
  font-family: "Lato", sans-serif;
}
.copyright-sec p a {
  color: #505050;
}
.copyright-sec p strong {
  display: block;
  font-weight: bold;
}
.copyright-sec .powered-by {
  text-align: right;
}
@media (max-width: 575px) {
  .copyright-sec .powered-by {
    padding-top: 1rem;
    text-align: center;
  }
}

.footer_right {
  width: 35%;
  position: relative;
}
@media (max-width: 991px) {
  .footer_right {
    width: 100%;
    margin-right: 0;
  }
}
.footer_right .footer_right__inner {
  width: 100%;
  padding: 3.6rem;
  background: rgba(29, 29, 29, 0.1);
}
.footer_right .footer_right__inner .contact__details ul li {
  display: flex;
  align-items: center;
  width: 100%;
  padding: 1.7rem 0;
  position: relative;
}
.footer_right .footer_right__inner .contact__details ul li::after {
  content: "";
  position: absolute;
  display: block;
  background: rgba(255, 255, 255, 0.2);
  width: 100%;
  height: 0.0625rem;
  bottom: 0.875rem;
}
.footer_right .footer_right__inner .contact__details ul li:last-of-type::after {
  display: none;
}
.footer_right .footer_right__inner .contact__details ul li .cont__content h5 {
  font-size: 1.8rem;
  font-weight: bold;
  font-family: "Lato", sans-serif;
  padding-left: 2.5rem;
}
.footer_right .footer_right__inner .contact__details ul li .cont__content p {
  font-size: 1.4rem;
  font-family: "Lato", sans-serif;
  padding-left: 2.5rem;
  line-height: 1.8rem;
}
.footer_right .footer_right__inner .contact__details ul li .cont__content p a {
  color: #505050;
}
.footer_right .footer_right__inner .contact__details ul li .cont__content address {
  font-size: 1.4rem;
  font-family: "Lato", sans-serif;
  padding-left: 2.5rem;
  line-height: 1.8rem;
}
.footer_right .footer_right__inner .follow__us {
  margin-top: 1.375rem;
  display: flex;
  align-items: center;
}
.footer_right .footer_right__inner .follow__us h5 {
  padding-right: 1.5625rem;
  border-right: 0.0625rem solid rgba(255, 255, 255, 0.3);
  font-size: 1.8rem;
}
.footer_right .footer_right__inner .follow__us ul {
  display: flex;
  justify-content: space-between;
  margin-left: 0.9375rem;
}
.footer_right .footer_right__inner .follow__us ul li {
  margin: 0 0.75rem;
}
.footer_right .footer_right__inner .follow__us ul li .fa {
  font-size: 1.8rem;
  color: #505050;
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

html {
  font-size: 10px;
  scroll-behavior: smooth;
  overflow-x: hidden;
}

body {
  margin: 0;
  padding: 0;
  font-family: "Lato", sans-serif;
  color: #505050;
}

.wrapper {
  overflow: hidden;
}

a {
  text-decoration: none;
}

ul {
  list-style: none;
}

.container {
  max-width: 1170px;
  margin: 0 auto;
  padding: 0 1.5rem;
}

.banner-section {
  position: relative;
}
.banner-section img {
  width: 100%;
}
.banner-section .scroll-down {
  width: 5.4rem;
  height: 5.4rem;
  border-radius: 2rem;
  -webkit-border-radius: 2rem;
  -moz-border-radius: 2rem;
  -ms-border-radius: 2rem;
  -o-border-radius: 2rem;
  background-color: #F2E162;
  position: absolute;
  bottom: 5%;
  left: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
}
@media (max-width: 767px) {
  .banner-section .scroll-down {
    width: 3.4rem;
    height: 3.4rem;
    border-radius: 1.5rem;
    -webkit-border-radius: 1.5rem;
    -moz-border-radius: 1.5rem;
    -ms-border-radius: 1.5rem;
    -o-border-radius: 1.5rem;
    bottom: 3%;
  }
}
.banner-section .fa {
  font-size: 2.7rem;
}
@media (max-width: 767px) {
  .banner-section .fa {
    font-size: 1.4rem;
  }
}

.about-us-section {
  text-align: center;
}
.about-us-section .behind-heading {
  z-index: 99;
  position: relative;
  color: rgba(0, 0, 0, 0.1);
  text-transform: uppercase;
  text-align: center;
  font-size: 15.1rem;
  font-weight: bold;
  font-family: "Poppins", sans-serif;
  z-index: -1;
}
@media (max-width: 991px) {
  .about-us-section .behind-heading {
    padding-top: 3rem;
    font-size: 10rem;
  }
}
@media (max-width: 767px) {
  .about-us-section .behind-heading {
    font-size: 5rem;
  }
}
.about-us-section .dark-heading {
  color: #706960;
  font-family: "Poppins", sans-serif;
  text-transform: uppercase;
  text-align: center;
  margin-bottom: 30px;
  margin-top: -105px;
  font-size: 3.6rem;
  font-weight: bold;
  font-family: "Poppins", sans-serif;
}
@media (max-width: 991px) {
  .about-us-section .dark-heading {
    font-size: 3rem;
    margin-top: -75px;
  }
}
@media (max-width: 767px) {
  .about-us-section .dark-heading {
    margin-top: -45px;
    font-size: 2.5rem;
  }
}

.about-us-text {
  text-align: center;
}
.about-us-text p {
  font-size: 1.6rem;
  text-align: center;
  padding: 0 10.6rem;
  padding-bottom: 1.5rem;
  font-family: "SF-Compact-Display";
  color: #272727;
}
@media (max-width: 991px) {
  .about-us-text p {
    padding: 1.5rem 2.2rem;
    font-size: 1.2rem;
  }
}
@media (max-width: 575px) {
  .about-us-text p {
    padding: 0rem 1rem;
    padding-bottom: 1rem;
  }
}

.btn {
  font-size: 1.6rem;
  padding: 0.6rem 1.6rem;
  background-color: #F2E162;
  color: #272727;
  outline: none;
  border: none;
  border-radius: 10px;
  -webkit-border-radius: 10px;
  -moz-border-radius: 10px;
  -ms-border-radius: 10px;
  -o-border-radius: 10px;
  text-transform: uppercase;
  font-family: "SF-Compact-Display";
  cursor: pointer;
}
.btn:hover {
  background-color: #272727;
  color: #F2E162;
}
@media (max-width: 991px) {
  .btn {
    font-size: 1rem;
  }
}

.contianer-fluid {
  width: 100%;
  padding-right: 15px;
  padding-left: 15px;
  margin-right: auto;
  margin-left: auto;
}

.latest-news-content {
  padding-top: 10rem;
  display: flex;
  align-items: center;
}
@media (max-width: 991px) {
  .latest-news-content {
    flex-direction: column;
    padding-top: 1rem;
  }
}
.latest-news-content .latest-text {
  position: relative;
  max-width: 20%;
  text-align: center;
}
@media (max-width: 991px) {
  .latest-news-content .latest-text {
    width: 100%;
    max-width: 100%;
    text-align: center;
  }
}
.latest-news-content h1 {
  z-index: 99;
  position: relative;
  color: rgba(0, 0, 0, 0.1);
  text-transform: uppercase;
  text-align: center;
  font-family: "Poppins", sans-serif;
  font-size: 15.1rem;
  margin-left: -10rem;
  transform: rotate(-90deg);
  -webkit-transform: rotate(-90deg);
  -moz-transform: rotate(-90deg);
  -ms-transform: rotate(-90deg);
  -o-transform: rotate(-90deg);
  text-align: center;
}
@media (max-width: 991px) {
  .latest-news-content h1 {
    font-size: 10rem;
    position: unset;
    transform: unset;
    -webkit-transform: unset;
    -moz-transform: unset;
    -ms-transform: unset;
    -o-transform: unset;
    margin: 0 auto;
  }
}
@media (max-width: 575px) {
  .latest-news-content h1 {
    font-size: 8rem;
  }
}
.latest-news-content h2 {
  font-size: 3.6rem;
  color: #706960;
  text-transform: uppercase;
  margin-bottom: 20px;
  text-align: center;
  margin: -100px 0 40px;
  transform: rotate(-90deg);
  -webkit-transform: rotate(-90deg);
  -moz-transform: rotate(-90deg);
  -ms-transform: rotate(-90deg);
  -o-transform: rotate(-90deg);
  position: absolute;
  top: 70%;
  right: 0%;
  left: -10%;
  font-family: "Poppins", sans-serif;
}
@media (max-width: 991px) {
  .latest-news-content h2 {
    transform: unset;
    -webkit-transform: unset;
    -moz-transform: unset;
    -ms-transform: unset;
    -o-transform: unset;
    position: unset;
    font-size: 3rem;
    margin-top: -75px;
  }
}
@media (max-width: 575px) {
  .latest-news-content h2 {
    font-size: 2rem;
    margin-top: -5.6rem;
  }
}
.latest-news-content .latest-slider {
  max-width: 80%;
  overflow: hidden;
}
@media (max-width: 991px) {
  .latest-news-content .latest-slider {
    width: 100%;
  }
}
.latest-news-content .latest-slider .slide .card {
  position: relative;
  overflow: hidden;
  height: 100%;
  cursor: pointer;
}
.latest-news-content .latest-slider .slide .card :hover .overlay {
  bottom: 0px;
}
.latest-news-content .latest-slider .slide .card :hover .overlay p {
  padding-top: 30px;
  opacity: 1;
}
.latest-news-content .latest-slider .slide .card :hover .overlay .right-arrow {
  opacity: 1;
}
.latest-news-content .latest-slider .slide .card img {
  width: 100%;
}
.latest-news-content .latest-slider .slide .card .card-date {
  position: absolute;
  display: flex;
  align-items: center;
  background-color: #ffffff;
  padding: 1rem;
  top: 30px;
  right: 30px;
  font-size: 4.1rem;
  border-radius: 1.5rem;
  -webkit-border-radius: 1.5rem;
  -moz-border-radius: 1.5rem;
  -ms-border-radius: 1.5rem;
  -o-border-radius: 1.5rem;
  font-family: "SF-Compact-Display";
}
@media (max-width: 991px) {
  .latest-news-content .latest-slider .slide .card .card-date {
    font-size: 2.1rem;
  }
}
.latest-news-content .latest-slider .slide .card .card-date .mon-yr {
  font-size: 1.4rem;
  width: 31px;
  margin-left: 10px;
  font-family: "SF-Compact-Display";
}
@media (max-width: 991px) {
  .latest-news-content .latest-slider .slide .card .card-date .mon-yr {
    font-size: 1rem;
  }
}
.latest-news-content .latest-slider .slide .card .overlay {
  position: absolute;
  bottom: -70px;
  background: rgb(0, 0, 0);
  background: rgba(0, 0, 0, 0.5);
  /* Black see-through */
  color: #f1f1f1;
  width: 100%;
  transition: 0.5s ease;
  font-size: 1.6rem;
  padding: 0px;
  text-align: center;
}
@media (max-width: 991px) {
  .latest-news-content .latest-slider .slide .card .overlay {
    bottom: -30px;
  }
}
.latest-news-content .latest-slider .slide .card .overlay .card-title {
  font-size: 1.8rem;
  font-weight: bold;
  font-family: "Poppins", sans-serif;
  padding: 0 1.5rem;
  padding-top: 1.4rem;
  line-height: 2.7rem;
}
@media (max-width: 991px) {
  .latest-news-content .latest-slider .slide .card .overlay .card-title {
    font-size: 1.6rem;
  }
}
@media (max-width: 991px) {
  .latest-news-content .latest-slider .slide .card .overlay .card-title {
    padding: 0 1.2rem;
  }
}
.latest-news-content .latest-slider .slide .card .overlay .card-text {
  font-size: 1.6rem;
  font-family: "Poppins", sans-serif;
  padding: 0 2.2rem;
}
@media (max-width: 991px) {
  .latest-news-content .latest-slider .slide .card .overlay .card-text {
    font-size: 1rem;
  }
}
.latest-news-content .latest-slider .slide .card .overlay p {
  opacity: 0;
}
.latest-news-content .latest-slider .slide .card .overlay .right-arrow {
  width: 40px;
  height: 40px;
  border-radius: 1rem;
  background-color: #F2E162;
  margin-left: 20px;
  margin-bottom: 20px;
  display: flex;
  margin-top: 10px;
  justify-content: center;
  align-items: center;
  opacity: 0;
}
.latest-news-content .latest-slider .slide .card .overlay .right-arrow .fa {
  font-size: 2.1rem;
  color: #706960;
}

.slide {
  transition: 0.5s all;
  transform: scale(0.8);
}

.slick-now {
  transform: scale(1) !important;
  -webkit-transform: scale(1) !important;
  -moz-transform: scale(1) !important;
  -ms-transform: scale(1) !important;
  -o-transform: scale(1) !important;
}

.slick-active + .slick-active + .slick-active + .slick-active {
  transform: scale(1.3);
  border: 1px solid rgb(17, 17, 17);
}

.slick-current.slick-active {
  transition: all 0.1s;
  transform: scale(1.2);
  -webkit-transform: scale(1.2);
  -moz-transform: scale(1.2);
  -ms-transform: scale(1.2);
  -o-transform: scale(1.2);
  -webkit-transition: all 0.1s;
  -moz-transition: all 0.1s;
  -ms-transition: all 0.1s;
  -o-transition: all 0.1s;
}

.services-text {
  text-align: center;
}
.services-text .behind-heading {
  z-index: 99;
  position: relative;
  color: rgba(0, 0, 0, 0.1);
  text-transform: uppercase;
  text-align: center;
  font-size: 15.1rem;
  font-weight: bold;
  font-family: "Poppins", sans-serif;
}
@media (max-width: 991px) {
  .services-text .behind-heading {
    padding-top: 3rem;
    font-size: 10rem;
  }
}
@media (max-width: 767px) {
  .services-text .behind-heading {
    font-size: 5rem;
  }
}
.services-text .dark-heading {
  color: #706960;
  font-family: "Poppins", sans-serif;
  text-transform: uppercase;
  text-align: center;
  margin-bottom: 30px;
  margin-top: -105px;
  font-size: 3.6rem;
  font-weight: bold;
  font-family: "Poppins", sans-serif;
}
@media (max-width: 991px) {
  .services-text .dark-heading {
    font-size: 3rem;
    margin-top: -75px;
  }
}
@media (max-width: 767px) {
  .services-text .dark-heading {
    margin-top: -45px;
    font-size: 2.5rem;
  }
}

.services {
  position: relative;
  padding-bottom: 5rem;
}
.services .services-block-sec {
  text-align: center;
}
.services .services-block-sec ul {
  display: flex;
  justify-content: space-evenly;
  flex-wrap: wrap;
  padding-bottom: 7.2rem;
}
.services .services-block-sec ul li {
  width: 20%;
  margin: 2rem 0;
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}
@media (max-width: 767px) {
  .services .services-block-sec ul li {
    width: 33.3333333333%;
  }
}
@media (max-width: 767px) {
  .services .services-block-sec ul li {
    width: 33.3333333333%;
  }
}
@media (max-width: 575px) {
  .services .services-block-sec ul li {
    width: 50%;
  }
}
.services .services-block-sec ul li h6 {
  font-size: 1.6rem;
  font-family: "Lato", sans-serif;
  text-transform: uppercase;
  padding-top: 1.7rem;
}
@media (max-width: 767px) {
  .services .services-block-sec ul li h6 {
    font-size: 1rem;
  }
}

.tenders {
  padding-top: 10rem;
  background: linear-gradient(to bottom, #E6E6E6 10%, #fff, #fff, #fff) no-repeat;
}
@media (max-width: 767px) {
  .tenders {
    padding-top: 4rem;
  }
}
@media (max-width: 575px) {
  .tenders {
    padding-top: 1rem;
  }
}
.tenders .tenders-text {
  text-align: center;
}
.tenders .tenders-text .behind-heading {
  z-index: 99;
  position: relative;
  color: rgba(0, 0, 0, 0.1);
  text-transform: uppercase;
  text-align: center;
  font-size: 15.1rem;
  font-weight: bold;
  font-family: "Poppins", sans-serif;
}
@media (max-width: 991px) {
  .tenders .tenders-text .behind-heading {
    padding-top: 3rem;
    font-size: 10rem;
  }
}
@media (max-width: 767px) {
  .tenders .tenders-text .behind-heading {
    font-size: 5rem;
  }
}
.tenders .tenders-text .dark-heading {
  color: #706960;
  font-family: "Poppins", sans-serif;
  text-transform: uppercase;
  text-align: center;
  margin-bottom: 30px;
  margin-top: -105px;
  font-size: 3.6rem;
  font-weight: bold;
  font-family: "Poppins", sans-serif;
}
@media (max-width: 991px) {
  .tenders .tenders-text .dark-heading {
    font-size: 3rem;
    margin-top: -75px;
  }
}
@media (max-width: 767px) {
  .tenders .tenders-text .dark-heading {
    margin-top: -45px;
    font-size: 2.5rem;
  }
}
.tenders .tenders-card {
  display: flex;
  flex-wrap: wrap;
  margin: 0 auto;
  justify-content: space-around;
}
.tenders .tenders-card .tenders-card-item {
  width: 47%;
  display: flex;
  justify-content: space-between;
  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
  transition: 0.3s;
  margin-bottom: 2.7rem;
  cursor: pointer;
}
@media (max-width: 991px) {
  .tenders .tenders-card .tenders-card-item {
    flex-direction: column-reverse;
  }
  .tenders .tenders-card .tenders-card-item img {
    width: 100%;
  }
}
@media (max-width: 575px) {
  .tenders .tenders-card .tenders-card-item {
    width: 100%;
  }
}
.tenders .tenders-card .tenders-card-item:hover {
  box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
}
.tenders .tenders-card .tenders-card-item h4 {
  font-size: 1.8rem;
  padding-left: 2rem;
  padding-top: 2.7rem;
  padding-bottom: 1.2rem;
  color: #505050;
  font-family: "Poppins", sans-serif;
  line-height: 21px;
}
.tenders .tenders-card .tenders-card-item p {
  font-size: 1.6rem;
  padding-left: 2rem;
  padding-bottom: 1.2rem;
  padding-right: 2.2rem;
  color: #505050;
  font-family: "Poppins", sans-serif;
}
@media screen and (max-width: 1070px) {
  .tenders .tenders-card .tenders-card-item p {
    font-size: 1rem;
  }
}

.half-bg-img {
  width: 100%;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
